//import sekcija

import java_cup.runtime.*;
import java.io.*;

parser code {:
   public static void main( String[] args )
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser parser = new MPParser( scanner );
		   parser.parse();
	  }
	  catch( Exception e )
	  {
		   e.printStackTrace();
	  }
   }
:};


//Terminali
terminal MAIN,INTEGER, CHAR, FLOAT, CASE, WHEN; // EPSILON,
terminal ID, CONST, PLUS, MINUS, LEFTPAR, RIGHTPAR, LEFTCURLY, RIGHTCURLY, COLON, ASSIGN, SEMICOLON, COMMA;

//Neterminali
non terminal Program, Block, Declarations, VarDecl, NameList, Type, StatementList, Statement, CaseStatement;
non terminal WhenStatementList, WhenStatement, Expression, AddOperator, Term;


//Gramatika
start with Program;

Program ::= MAIN LEFTPAR RIGHTPAR Block
            {:
               System.out.println( "Redukcija 1: Program ::= main () Block" );
            :};

Block ::= LEFTCURLY Declarations StatementList RIGHTCURLY
             {:
                System.out.println( "Redukcija 2: Block ::= {Declarations StatementList}" );
             :};

Declarations ::= Declarations VarDecl 
            {:
               System.out.println( "Redukcija 3: Declarations ::= Declarations VarDecl" );
            :}
          | 
          ;

VarDecl ::= Type NameList SEMICOLON
                {:
                   System.out.println( "Redukcija 5: VarDecl ::= Type NameList;" );
                :};

NameList ::= ID
             {:
                System.out.println( "Redukcija 6: NameList ::= ID" );
             :} 
           | NameList COMMA ID
             {:
                System.out.println( "Redukcija 7: NameList ::= NameList , ID" );
             :}
           ;

Type ::= INTEGER 
        {:
           System.out.println( "Redukcija 8: Tip ::= integer" );
        :}
      | CHAR
        {:
           System.out.println( "Redukcija 9: Tip ::= char" );
        :}
      | FLOAT
        {:
           System.out.println( "Redukcija 10: Tip ::= float" );
        :}
      ;

StatementList ::= StatementList Statement 
         {:
            System.out.println( "Redukcija 11: StatementList ::= StatementList Statement" );
         :}
       | Statement
       	 {:
            System.out.println( "Redukcija 12: StatementList ::= Statement" );
         :}
         ;

Statement ::= CaseStatement
           {:
              System.out.println( "Redukcija 13: Statement ::= CaseStatement" );
           :}
         | ID ASSIGN Expression SEMICOLON
           {:
              System.out.println( "Redukcija 14: Statement ::= ID = Expression;" );
           :}
         | Block
           {:
              System.out.println( "Redukcija 15: Statement ::= Block" );
           :}
         ;

CaseStatement ::= CASE LEFTPAR Expression RIGHTPAR LEFTCURLY WhenStatementList RIGHTCURLY
            {:
               System.out.println( "Redukcija 16: CaseStatement ::= case (Expression) {WhenStatementList}" );
            :};

WhenStatementList ::= WhenStatementList WhenStatement
         {:
            System.out.println( "Redukcija 17: WhenStatementList ::= WhenStatementList WhenStatement" );
         :}
        | WhenStatement
           {:
              System.out.println( "Redukcija 18: WhenStatementList ::= WhenStatement" );
           :}
         ;

WhenStatement ::= WHEN CONST COLON Statement
          {:
             System.out.println( "Redukcija 19: WhenStatement ::= when CONST :  Statement" );
          :};

Expression ::= Expression AddOperator Term 
           {:
              System.out.println( "Redukcija 20: Expression ::= Expression AddOperator Term " );
           :}
          | Term
           {:
              System.out.println( "Redukcija 21: Expression ::= Term" );
           :}
         ;

AddOperator ::= PLUS  
          {:
             System.out.println( "Redukcija 22: AddOperator ::= +" );
          :}
        | MINUS
          {:
             System.out.println( "Redukcija 23: AddOperator ::= -" );
          :}
        ;

Term ::= ID
           {:
              System.out.println( "Redukcija 24: Term ::= ID" );
           :}
         | CONST
           {:
              System.out.println( "Redukcija 25: Term ::= CONST" );
           :}
         | LEFTPAR Expression RIGHTPAR
           {:
              System.out.println( "Redukcija 26: Term ::= (Expression)" );
           :}
         ;